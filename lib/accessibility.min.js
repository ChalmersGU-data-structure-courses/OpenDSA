window.onload=()=>{wrapCodeWithSnippets();const e=addCodeSnippetSupport();for(var t=0;t<e;t++){const e="tv"+t,n="treeView"+t;document.getElementById(e).addEventListener("click",(()=>{"none"==document.getElementById(n).style.display?toggleTreeViewOn(e):toggleTreeViewOff(e)}))}};const addCodeSnippetSupport=()=>{const e=document.getElementsByClassName("codeSnippet");return Array.from(e).forEach(((e,t)=>{e.classList.contains("highlight")?addCodeSnippetSupportSingleLang(e,t):addCodeSnippetSupportMultiLang(e,t)})),e.length},addCodeSnippetSupportSingleLang=(e,t)=>{const n=parseJavaToTokens(e.textContent),s=buildParseTree(n),o=document.createElement("div");o.classList.add("row");const a=document.createElement("div");a.classList.add("col-md-12"),a.classList.add("code-snippet");const l=document.createElement("div");l.id=`treeView${t}`,l.style.display="none",l.innerHTML=s,o.appendChild(a),o.appendChild(l);const d=document.createElement("button");d.id=`tv${t}`,d.textContent="Toggle Tree View",d.classList.add("btn"),d.classList.add("btn-primary");const c=document.createElement("div");c.appendChild(d),e.parentElement.appendChild(o),a.appendChild(c),a.appendChild(e)},addCodeSnippetSupportMultiLang=(e,t)=>{const n=e.getElementsByTagName("a");Array.from(n).forEach(((e,n)=>{0==n?e.addEventListener("click",(()=>{showTreeViewAndButton(`tv${t}`,`treeView${t}`)})):e.addEventListener("click",(()=>{hideTreeViewAndButton(`tv${t}`)}))}));const s=e.getElementsByClassName("highlight")[0],o=parseJavaToTokens(s.textContent),a=buildParseTree(o),l=document.createElement("div");l.classList.add("row");const d=document.createElement("div");d.classList.add("col-md-12"),d.classList.add("code-snippet");const c=document.createElement("div");c.id=`treeView${t}`,c.style.display="none",c.innerHTML=a,l.appendChild(d),l.appendChild(c);const i=document.createElement("button");i.id=`tv${t}`,i.textContent="Toggle Tree View",i.classList.add("btn"),i.classList.add("btn-primary"),i.style.float="right",e.getElementsByTagName("ul")[0].appendChild(i),e.parentElement.appendChild(l),d.appendChild(e)},toggleTreeViewOn=e=>{const t=document.getElementById(e).closest(".row").getElementsByClassName("code-snippet")[0];t.classList.remove("col-md-12"),t.classList.add("col-md-6");const n=`treeView${e.replaceAll(/[^0-9]/g,"")}`;document.getElementById(n).style.display="",document.getElementById(n).classList.add("col-md-6")},hideTreeViewAndButton=e=>{document.getElementById(e).style.display="none",toggleTreeViewOff(e)},showTreeViewAndButton=(e,t)=>{document.getElementById(e).style.display="";"none"!=document.getElementById(t).style.display&&toggleTreeViewOn(e)},toggleTreeViewOff=e=>{const t=document.getElementById(e).closest(".row").getElementsByClassName("code-snippet")[0];t.classList.remove("col-md-6"),t.classList.add("col-md-12");const n=`treeView${e.replaceAll(/[^0-9]/g,"")}`;document.getElementById(n).classList.remove("col-md-6"),document.getElementById(n).style.display="none"},tokenList=[{ID:"Annotation",Regex:/^@[^\s\/]*/g},{ID:"Comment",Regex:/^\/\/.*/g},{ID:"Comment",Regex:/^\/\*+[^\/]*\*\//g},{ID:"Right Brace",Regex:/^}/g},{ID:"Loop",Regex:/^(for|while)\s*\([^{]*{/g},{ID:"If",Regex:/^if\s*\([^{]*{/g},{ID:"Else",Regex:/^else\s*{/g},{ID:"Else If",Regex:/^else\s+if\s*\([^{]*{/g},{ID:"Try",Regex:/^try[^{]*{/g},{ID:"Catch",Regex:/^catch[^{]*{/g},{ID:"Interface",Regex:/^(public\s+|)\s*interface[^{]*{/g},{ID:"Class",Regex:/^((public|private|protected|)\s+|)(static\s+|)(abstract\s+|)class\s+[^{]*{/g},{ID:"Code Block",Regex:/^[A-z]*\s*\([^;\n{]*;/g},{ID:"Method",Regex:/^((public|private|protected|)\s+|static|)\s*(static\s+|)\s*(<.*>\s+|)\s*((void|byte|long|short|double|int|float|boolean|char|([A-Z][A-z\<\>]*)\s+)|)\s*\w*\s*\([^;{]*[;{]/g},{ID:"Code Block",Regex:/^[^;]*;/g}],getAllCodeBlocks=()=>{const e=/^\w*_code$/g,t=document.querySelectorAll("*[id]"),n=Array.from(t).filter((t=>t.id.match(e))),s=document.getElementsByClassName("highlight"),o=Array.from(s).filter((t=>!t.parentNode.parentNode.parentNode.id.match(e)&&!t.parentNode.classList.contains("highlight-guess")));return n.concat(o)},wrapCodeWithSnippets=()=>{getAllCodeBlocks().forEach((e=>{const t=wrap(e);t.wrapper.classList.add("codeWrapper"),t.self.classList.add("codeSnippet")}))},wrap=e=>{const t=e.parentNode,n=t.childNodes,s=Array.from(n).findIndex((t=>t==e)),o=document.createElement("div");if(s>=n.length)o.appendChild(e),t.appendChild(o);else{const a=n[s+1];o.appendChild(e),t.insertBefore(o,a)}return{wrapper:o,self:e}},parseJavaToTokens=(e,t=[])=>{const n=e.trim().replace(/^\n/,"");if(""==n)return t;const s=tokenList.map((e=>{const t=n.match(e.Regex);return null!=t&&0!=t.length?{ID:e.ID,Match:t[0]}:null})).filter((e=>null!=e)),o=s.length>=1?s[0]:null,a=((e,t)=>{if(null==t||"Comment"==t.ID)return e;if("Code Block"!=t.ID||"Code Block"!=(e.length>0?e[e.length-1].ID:""))return e.concat(t);{const n=e[e.length-1].Match.concat(t.Match);return e.slice(0,e.length-1).concat({ID:e[e.length-1].ID,Match:n})}})(t,o);return parseJavaToTokens(n.substring(o.Match.length),a)},buildParseTree=e=>{const t=(e,n=0,s=[])=>{if(0==e.length)return s;const o=e[0],a=((e,t,n)=>"Right Brace"!=e.ID?"Comment"==e.ID||"Code Block"==e.ID?n.concat([`${new Array(2*t).join(" ")}<span>H${t} | ${e.ID}</span>\n`]):n.concat([`${new Array(2*t).join(" ")}<span>H${t} | ${e.ID}: ${e.Match.replace(/{/g,"").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/\n/g,"")}</span>\n`]):n)(o,n,s),l="Comment"==o.ID||"Code Block"==o.ID||"Right Brace"==o.ID||"Method"==o.ID&&null!=o.Match.match(/;/g)||"Annotation"==o.ID?"Right Brace"==o.ID?n-1:n:n+1;return t(e.slice(1),l,a)},n=t(e);return'<pre style="position: absolute; top: 50%; transform: translateY(-50%);">'.concat(n.join("")).concat("</pre>")};
