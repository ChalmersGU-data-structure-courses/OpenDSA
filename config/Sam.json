{
  "title": "CS3 Data Structures & Algorithms",
  "desc": "CS3 Data Structures & Algorithms",
  "build_dir": "Books",
  "code_dir": "SourceCode/",
  "code_lang": {
    "Java": {
      "ext": ["java"],
      "label": "Java",
      "lang": "java"
    },
    "Java_Generic": {
      "ext": ["java"],
      "label": "Java (Generic)",
      "lang": "java"
    },
    "C++": {
      "ext": ["cpp", "h"],
      "label": "C++",
      "lang": "C++"
    }
  },
  "lang": "en",
  "build_JSAV": false,
  "build_cmap": true,
  "suppress_todo": true,
  "assumes": "recursion",
  "dispModComp": true,
  "glob_exer_options": {},
  "glob_ss_options": {
    "threshold": 1.0,
    "points": 0.0,
    "required": false
  },
  "glob_ff_options": {
    "threshold": 1.0,
    "points": 0.0,
    "required": false
  },
  "glob_ka_options": {
    "threshold": 5,
    "points": 1.0,
    "required": true
  },
  "glob_extr_options": {
    "code-workout": {
      "points": 2.0
    },
    "points": 1.0
  },
  "glob_pe_options": {
    "threshold": 0.9,
    "points": 2.0,
    "required": true
  },
  "glob_ae_options": {
    "threshold": 0,
    "points": 2.0,
    "required": true
  },
  "chapters": {
    "Recursion": {
      "RecurTutor/CodeCompletionEx": {
        "Recursion Programming Exercise: Largest": {
          "points": 1.0
        },
        "Recursion Programming Exercise: Multiply": {
          "points": 1.0
        },
        "Recursion Programming Exercise: GCD": {
          "points": 1.0
        },
        "Recursion Programming Exercise: log": {
          "points": 1.0
        },
        "Recursion Programming Exercise: Cummulative Sum": {
          "points": 1.0
        },
        "Recursion Programming Exercise: Add odd positions": {
          "points": 1.0
        },
        "Recursion Programming Exercise: Sum Of the Digits": {
          "points": 1.0
        },
        "Recursion Programming Exercise: Count Characters": {
          "points": 1.0
        }
      },
      "RecurTutor/HarderCodeCompletionEx": {
        "Recursion Programming Exercise: Minimum of array": {
          "points": 1.0
        },
        "Recursion Programming Exercise: Is Reverse": {
          "points": 1.0
        },
        "Recursion Programming Exercise: Decimal to Binary": {
          "points": 1.0
        }
      }
    }
  }
}
