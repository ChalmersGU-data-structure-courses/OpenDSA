Algorithm 1 Build-Min-Heap(A)
    for i = heap-size[A]/2 - 1 downto 0 
        Min-Heapify (A, i)

Algorithm 2 Min-Heapify(A, i)
    l = Left-child-index(i)
    r = Right-child-index(i)
    if l < heap-size[A] and A[l] < A[i]
        smallest = l
    else
        smallest = i
    if r < heap-size[A] and A[r] < A[smallest]
        smallest = r
    if smallest != i then
        Swap(A[i], A[smallest])
        Min-Heapify(A, smallest)
    end if
