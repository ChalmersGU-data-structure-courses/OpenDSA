[{
    "_exerciseType": "Comment: DFA, NFA, REGEXP, GRAMMAR,PDA,TM.",
    "exerciseType": "REGEXP",
    "totalTrueCases": 10,
    "totalFalseCases": 4,
    "containLetters": ["a", "b"],
    "randomStringLength": [0, 15],
    "_trueCounter/falseCounter": "Comment: Number of hard code test cases.",
    "trueCounter": 10,
    "falseCounter": 4,

    "expression": "((ab)^+ba^*) + (b^*(ab)^*)",
    "description": "Construct an NFA that accepts",
    "type": "both",
    "testCases": [{
            "": true
        },
        {
            "ba": false
        },
        {
            "abababababba": true
        },
        {
            "ababababab": true
        },
        {
            "abba": true
        },
        {
            "abbaaaaaaa": true
        },
        {
            "abb": true
        },
        {
            "abababababab": true
        },
        {
            "bbbbbbbab": true
        },
        {
            "aaaaaaaaa": false
        },
        {
            "baa": false
        },
        {
            "aab": false
        },
        {
            "bab": true
        },
        {
            "bbbbb": true
        }
    ],
    "graph": {
        "nodes": [],
        "edges": []
    },
    "solution": ""
}]