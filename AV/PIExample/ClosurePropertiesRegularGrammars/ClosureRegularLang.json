{
    "translations": {
      "en": {
        "fa1": "../../../AV/VisFormalLang/NFA/AutomataFiles/NFA2DFA2a.jff",
        "q1": {
          "type": "multiple",
          "src": "../../../AV/Development/formal_language/FAEditor.html",
          "description": "$L_1$ is a regular language $\\Rightarrow$ $\\exists$ a DFA $M$ such that $L1=L(M)$.<br> Construct DFA $M′$ such that: <br> final states in $M$ are nonfinal states in $M′$.<br> nonfinal states in $M$ are final states in $M′$. <br> $w \\in L (M′)\\Leftrightarrow w \\in \\overline{L} \\Rightarrow $closed under complementation.",
          "question": "For a DFA, will an NFA work?",
          "answer": "Yes",
          "choices": ["Yes", "No"]
        },
        "q2": {
            "type": "multiple",
            "src": "../../../AV/Development/formal_language/FAEditor.html",
            "description": "Here is another approach, by construction.<br> $L_1$ and $L_2$ are regular languages, therefore there exist DFAs $M_1$ and $M_2$ such that $L_1=L(M_1)$ and $L_2=L(M_2)$.<br> $L_1=L(M_1)$ and $L_2=L(M_2)$<br> $M_1=(Q,\\sum,\\delta_1,q_0,F_1)$<br> $M_2=(Q,\\sum,\\delta_2,p_0,F_2)$",
            "question": "Will the DFA accept when only $M_1$ is accepted and $M_2$ is not?",
            "answer": "No",
            "choices": ["Yes", "No"]
        },
        "q3": {
            "type": "multiple",
            "src": "../../../AV/Development/formal_language/FAEditor.html",
            "description": "$L = \\{x \\ | \\ x \\ is \\ a \\ positive \\ even \\ integer\\}$. Think about 4 - 10",
            "question": "Is $L$ closed under subtraction?",
            "answer": "No",
            "choices": ["Yes", "No"]
          },
          "q4": {
            "type": "multiple",
            "src": "../../../AV/Development/formal_language/FAEditor.html",
            "description": "$L = \\{x \\ | \\ x \\ is \\ a \\ positive \\ even \\ integer\\}$",
            "question": "Is $L$ closed under division?",
            "answer": "No",
            "choices": ["Yes", "No"]
          }
      }
    }
  }
  